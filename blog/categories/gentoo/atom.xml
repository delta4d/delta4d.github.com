<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gentoo | Try To Think]]></title>
  <link href="http://delta4d.github.io/blog/categories/gentoo/atom.xml" rel="self"/>
  <link href="http://delta4d.github.io/"/>
  <updated>2013-11-14T00:49:00+08:00</updated>
  <id>http://delta4d.github.io/</id>
  <author>
    <name><![CDATA[delta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[funtoo on vbox]]></title>
    <link href="http://delta4d.github.io/blog/2013/10/31/funtoo-on-vbox/"/>
    <updated>2013-10-31T15:00:00+08:00</updated>
    <id>http://delta4d.github.io/blog/2013/10/31/funtoo-on-vbox</id>
    <content type="html"><![CDATA[<p>长时间没什么更新，主要是没有再做算法比赛了，不知道自己什么时候能开窍啊，会有那么一天么。。也并未研究些什么，并没有什么需要特别记录的。另外机子上Linux系统也已经不在了，换了机器后想更新下不是特别容易。。</p>

<p>对我来说不管单独使用win还是linux都会有些问题。win下虚拟机装linux，然后putty连接vbox是目前对我来说使用win和Linux的最好方式了。。</p>

<p>至于为什么装<a href="http://www.funtoo.org/">funtoo</a>，是因为一点点的好奇，还有gentoo已经试过了，再次装的话想图个新鲜。安装步骤并不复杂，跟着官方wiki走一遍就好了。一开始内核用的是debian-sources，因为可以用binary标记，再者也是官方推荐的，但是编译内核的时候一直在compressing cpio那里卡了5个夜还是没结果，后来换成vanilla-sources后，看完一集HIMYM就好了，安装速度出奇的快。需要说明的是，如果使用genkernel的话，可能在安装guile的时候会出现@print无法使用等问题，只要将sys-apps/texinfo降级到4.13-r2就可以了。</p>

<p>装好funtoo后，然后需要putty连接vbox。需要对虚拟机添加一个adapter，选择host-only，然后虚拟机开启ssh，查看eth1 ip地址，putty就可以连接了。为什么要这么麻烦使用putty呢，一可以通过putty提高用户体验，二是如果在虚拟机中搭建网络比如有rails工程的话，那么在win主机中可以通过浏览器访问，这个是我认为最方便的。访问的话只要敲你putty连接的那个ip就可以了，记不住的话可以在win的hosts文件里添加一个别名就好了。如果需要putty正确显示中文的话需要将window-translation-received data assumed to be in which character set设置为utf8。另外还有一个比较重要的是设置共享文件夹，这个首先需要在虚拟机设置中添加共享目录，然后需要安装vbox增强插件，funtoo里<code>emerge virtualbox-guest-additions</code>就装好了，记着要开启对应的服务，通过<code>/etc/init.d/virtualbox-guest-additions start</code>就可以了，如果需要开机启动服务的话，<code>rc-update add virtualbox-guest-additions default</code>就好了，然后敲<code>rc</code>就可以重新启动一遍需要的服务。最后<code>mount -t vboxsf your_share_folder_name your_mount_point</code>就可以访问共享文件夹了。</p>

<p>装好虚拟机后，开始配置octopress，每次在新环境下配octopress都会有不同的问题。。首先通过以下命令更新一下octopress</p>

<pre><code>$ cd your_octopress_directory
$ git remote add octopress https://github.com/imathis/octopress.git
$ git pull octopress master
$ bundle install
</code></pre>

<p>funtoo/gentoo下的ruby版本管理还是比较方便的，<code>eselect ruby list</code>查看可用版本，<code>eselect ruby set your_favourite_version</code>就可以了，目前倒是没有特别需要rvm或rbenv。要使用eselect ruby需要安装<code>eselect-ruby</code>，默认应该是没有的。funtoo/gentoo下的eselect确实很方便。</p>

<p>如果octopress下出现类似’pygments_code.rb:27:in ‘rescue in pygments’: Pygments can’t parse unknown language’之类的问题，这个是由于所使用python版本引起的，可以通过<code>eselect python set xxx</code>来解决。装好机后python默认是3.x，但是现在很多程序都是2.7的。还有一种方法是改掉gems/…/pygments/mentos.py的shebang，将python改为python2就可以了。</p>

<p>最后表示持续关注<a href="https://github.com/TryGhost/Ghost">ghost</a>的进展，就目前来看应该是不错的，希望以后可以将博客迁移到ghost上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gentoo notes 03 - programs]]></title>
    <link href="http://delta4d.github.io/blog/2013/04/01/gentoo-notes-03/"/>
    <updated>2013-04-01T21:45:00+08:00</updated>
    <id>http://delta4d.github.io/blog/2013/04/01/gentoo-notes-03</id>
    <content type="html"><![CDATA[<p>稍微总结下gentoo下常用的一些软件。</p>

<h2 id="emerge">Emerge</h2>

<blockquote>
  <p>emerge是使用<a href="http://en.wikipedia.org/wiki/Portage_(software)">portage</a>的一个工具。</p>
</blockquote>

<ul>
  <li>
    <p>查询emerge相关选项的含义</p>

    <pre><code>$ man emerge
</code></pre>
  </li>
  <li>
    <p>更新portage树</p>

    <pre><code># 使用rsnyc
$ emerge --sync
# rsync不能用时，使用gentoo每天的portage快照
$ emerge-webrsync
</code></pre>
  </li>
  <li>
    <p>查询软件</p>

    <pre><code># 搜索所有名字里包含pdf的包
$ emerge --search pdf
# 在包描述里查询关键字
$ emerge --searchdesc pdf
# 或
$ emerge -S pdf
</code></pre>

    <p>当然还有更好更快的方法，这个在后面会提到。</p>
  </li>
  <li>
    <p>安装软件</p>

    <pre><code># 安装gnumeric
$ emerge gunmeric
# 假装安装软件。在你不确定这个软件都要装哪些包时，可以用这个命令
$ emerge --pretend gnumeric
# 只下载源码，可在/usr/portage/distfiles目录下找到
$ emerge --fetchonly gnumeric
</code></pre>
  </li>
  <li>
    <p>查找已安装包文档</p>

    <p>doc USE决定了包文档是否被安装</p>

    <pre><code># 以alsa-lib为例
$ emerge -vp alsa-lib
[ebuild  N    ] media-libs/alsa-lib-1.0.14_rc1  -debug +doc 698 kB
</code></pre>

    <p>后面会提到有更好的工具。</p>
  </li>
  <li>
    <p>删除软件</p>

    <pre><code># 删除gnumeric
$ emerge -unmerge gnumeric
</code></pre>
  </li>
  <li>
    <p>更新系统</p>

    <pre><code># 更新系统
$ emerge --update --ask world
# 更新依赖。否则只会更新列在/var/lib/portage/world里的软件
$ emerge --update --deep world
# 上面的命令还是没有更新全部包，因为在装某个软件时，只有在编译时依赖，而在编译完后就不再需要了。
$ emerge --update --deep --with-bdeps=y world # bdeps = build dependencies
# 如果USE标记有改变
$ emerge --update --deep --with-bdeps=y --newuse world

# 更新整个系统的话，一般执行以下的命令
$ emerge --sync
$ emerge -avuND world
$ revdep-rebuild # from gentoolkit
</code></pre>
  </li>
  <li>
    <p>一些标记</p>

    <p>更新系统或装软件时经常会看到一些字母，或者不同的颜色，这些都是有自己特定的意义的</p>

    <p><strong>State flags</strong></p>

    <pre><code>B 被已安装的包拦截（阻挡？block怎么翻译比较好= =）
b 被已安装的包拦截（但是冲突会自动解决）
I 交互式包安装（需要用户输入）
N 新的包，未安装
S 安装到一个新的slot（怎么翻。。）
D 降级到一个老版本（downgrade）
U 升级到一个新版本（upgrage）
R 重新安装相同的版本，很可能时由于新的USE标记或有标记被移除
F 下载受限，必须手动下载（比如oracle java诶，要点I agree啊。。）
f 已经下载过啦（nothing to do，yay）
r 重新安装（很可能是slot或sub-slot的问题）
</code></pre>

    <p><strong>USE flags</strong></p>

    <pre><code>未被高亮的USE是不变或启用
USE（黄绿蓝）前的减号（-）表示该标记被禁用
USE后的百分号（%）标志着新加入或被移除，和yellow一样
USE后的星号（*）表示它的意义/域有所改变，和green一样
USE两侧的括号()表示它当前被屏蔽（可能由于当前的平台不支持此标记）
</code></pre>

    <p><strong>Color</strong></p>

    <pre><code>red USE被启用或不变
yellow USE被添加，移除或屏蔽
green USE自从上次安装后被改变了，和（*）已一样
blue USE被禁用，和减号（-）一样
</code></pre>
  </li>
  <li>
    <p>安装软件again</p>

    <p>不能成功安装时请仔细查看emerge输出，添加相应的内容到/etc/portage/的package.keywords,package.license,package.mask,package.unmask,package.use等文件。</p>
  </li>
</ul>

<h2 id="gentoolkit">Gentoolkit</h2>

<blockquote>
  <p>这是其他发行版不存在的一个工具，可以说它在一定程度上代表了Gentoo，位于app-portage/gentoolkit。看到kit应该就知道了，这其实是一个工具包，而不是一个单一的软件。接下来一个一个介绍。</p>
</blockquote>

<ul>
  <li>
    <p>安装</p>

    <pre><code>emerge gentoolkit
</code></pre>
  </li>
  <li>
    <p>equery</p>

    <p>equery用来显示系统上包的信息。可以使用<code>equery --help</code>列出相关选项，更详细的可以<code>man equery</code></p>

    <pre><code># 查找一个文件来自哪个包
$ equery belongs /usr/bin/xmms
[ Searching for file(s) /usr/bin/xmms in *... ]
media-sound/xmms-1.2.10-r9 (/usr/bin/xmms)
# 使用-f，可以使用正则表达式，使用-e可以在找到一个匹配后立刻终止
	
# 检查包的完整性
# 检查md5和时间戳来检查一个可能被冲突，替换或移除的包
$ equery check gentoolkit
[ Checking app-portage/gentoolkit-0.2.0 ]
 * 54 out of 54 files good
# 配置文件改变可能被认为not good

# 依赖
# equery可以用来查询一个包的直接依赖
$ equery depends pygtk
[ Searching for packages depending on pygtk... ]
app-office/dia-0.93
dev-python/gnome-python-2.0.0-r1
gnome-extra/gdesklets-core-0.26.2
media-gfx/gimp-2.0.4
x11-libs/vte-0.11.11-r1
# equery可以查询一个特定包的依赖图
$ equery depgraph cdrtools

# 查询属于一个ebuild的文件
$ equery files gentookit

# 查找使用特定USE标记的包
$ equery hasuse mozilla

# 列出包
$ equery list gentoolkit

# 计算包大小
$ equery size openoffice-bin

# 特定包的USE
$ equery uses ethereal

# 查找ebuild位置
$ equery which cdrtools
</code></pre>
  </li>
  <li>
    <p>euse</p>

    <p>euse用来列出，启用或禁用USE标记。</p>

    <pre><code># 获取当前活动的USE标记
$ euse -a

# 启用USE标记
$ euse -E 3dfx # /etc/make.conf会被改变，备份为/etc/make.conf.euse_backup

# 禁用USE标记
$ euse -D 3dfx
</code></pre>
  </li>
  <li>
    <p>glsa-check</p>

    <p>glsa-check主要用来跟踪GLSA’s（Gentoo Linux Security Advisory）。</p>

    <pre><code># 列出未被应用的GLSAs
$ glsa-check --list

# 特定GLSAs的信息
$ glsa-check --dump 200812-20

# 测试特定GLSAs的易碎性
$ glsa-check --test 200812-20

# 自动应用GLSAs
$ glsa-check --fix 200901-15
</code></pre>
  </li>
  <li>
    <p>revdep-rebuild</p>

    <p>Gentoo的一个反向依赖重建工具。经常在系统更新完后运行此命令。</p>

    <pre><code># pretend mode
$ revdep-rebuild -p
# normal mode
$ revdep-rebuild
</code></pre>
  </li>
  <li>
    <p>eread</p>

    <p>显示portage的elog文件。可以在makefile里设置保存的elog文件的相关变量。</p>

    <pre><code># file location: /etc/make.conf
PORTAGE_ELOG_GLASSES="log"
PORTAGE_ELOG_SYSTEM="save"
</code></pre>

    <p>一旦设置好后，运行<code>eread</code>就可以了。</p>
  </li>
  <li>
    <p>eclean</p>

    <p>eclean用来移除陈旧的源码和二进制文件。</p>
  </li>
</ul>

<h2 id="portage-utils">Portage-utils</h2>

<blockquote>
  <p>Portage-utils提供了一组快速的工具，但是相对gentoolkit在功能上有所限制，这也是由于追求速度所牺牲的。</p>
</blockquote>

<ul>
  <li>
    <p>安装</p>

    <pre><code>emerge portage-utils
</code></pre>
  </li>
  <li>
    <p>使用</p>

    <pre><code># qfile找到一个文件属于哪个包
$ qfile /etc/fonts/fonts.conf

# qcheck检查包的完整性
$ qcheck portage-utils

# qdepends列出包依赖
$ qdepends -a pygtk

# qlist列出属于某个ebuild的文件
$ qlist vim

# quse查找包的USE标记
$ quse firefox

# qsize查询包大小
$ qsize vim

# qsearch查找portage树
$ qsearch terminus
$ qsearch -H terminus # terminus作者的主页是啥？
$ qsearch -S "jabber client" # 需要一个jabber clinet？

# qlop查询emerge log信息
$ qlop -tH perl # 装perl大概要多长时间
$ qlop -c # 看看emerge现在在干什么^_^
</code></pre>
  </li>
</ul>

<h2 id="eix">Eix</h2>

<blockquote>
  <p>快速查找portage树。我现在基本都用eix来查找。</p>
</blockquote>

<ul>
  <li>
    <p>安装</p>

    <pre><code>emerge eix
</code></pre>
  </li>
  <li>
    <p>更新缓存</p>

    <pre><code>$ eix-update
$ eix-sync # will run emerge --sync first
</code></pre>
  </li>
  <li>
    <p>使用</p>

    <pre><code>$ eix --help
$ eix emer # 查询名字里有emer的包
$ eix -C app-portage emer # 在给定类型里查找
$ eix -I -C app-portage porta # 查询已安装的包
$ eix -S description # 查找包描述
$ eix -S -c corba # 查找包描述并且打印完整的列表
$ eix-remote update # 更新overlay缓存
$ eix-test-obsolete -c -b # 陈旧和遗失包查询
</code></pre>
  </li>
</ul>

<h2 id="layman">Layman</h2>

<blockquote>
  <p>用来管理overlays的工具。</p>
</blockquote>

<ul>
  <li>
    <p>安装</p>

    <pre><code>emerge layman
</code></pre>
  </li>
  <li>
    <p>配置</p>

    <pre><code>(for layman 1.1)
$ echo "source /usr/portage/local/layman/make.conf" &gt;&gt; /etc/make.conf

(for layman 1.2)
$ echo "source /usr/local/portage/layman/make.conf" &gt;&gt; /etc/make.conf

(for layman 1.3 and later)
$ echo "source /var/lib/layman/make.conf" &gt;&gt; /etc/make.conf
</code></pre>
  </li>
  <li>
    <p>使用</p>

    <pre><code># 列出可用overlays
$ layman -L

# 安装一个overlay
$ layman -a &lt;overlay-name&gt;

# 更新overlay
$ layman -S
</code></pre>
  </li>
</ul>

<h2 id="references">References</h2>

<ul>
  <li><a href="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=2&amp;chap=1">A Portage Introduction</a></li>
  <li><a href="http://en.wikipedia.org/wiki/Portage_(software)">Gentoo Portage Wiki</a>	</li>
  <li><a href="http://en.wikipedia.org/wiki/Portage_(software)">Portage Wikipedia</a></li>
  <li><a href="http://www.gentoo.org/doc/en/gentoolkit.xml">Gentoolkit</a></li>
  <li><a href="http://www.gentoo.org/doc/en/portage-utils.xml">Portage-Utils</a></li>
  <li><a href="http://eix.berlios.de/">Eix Homepage</a></li>
  <li><a href="http://www.gentoo.org/proj/en/overlays/userguide.xml">Gentoo Overlays</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gentoo notes 02 - customize]]></title>
    <link href="http://delta4d.github.io/blog/2013/03/07/gentoo-notes-02/"/>
    <updated>2013-03-07T21:25:00+08:00</updated>
    <id>http://delta4d.github.io/blog/2013/03/07/gentoo-notes-02</id>
    <content type="html"><![CDATA[<p>notes02写点桌面美化的东西吧。其实用过KDE，Gnome，Awesome，Openbox等各种环境，最后稳定下来到XFCE4，其实以上提到都是很不错的环境，但是我有时候就是会对很多其实无关痛痒的东西较真，真正关系到自己的东西或事情反倒不那么上心了。KDE就是很不错的一个桌面环境，至于当初为什么换掉现在也记不清楚了。说到底，DE/WM这种东西不能太过在意，用Linux毕竟不是来玩桌面的。自从知道Linux的存在后，就不停的折腾发行版，DE/WM，但最后并没有学到多少东西，最后觉得还是得踏踏实实的用才行。下面是现在的一张桌面截图：</p>

<p><img src="http://delta4d.github.io/images/upload/2013-03-07-desktop.png" width="50%" height="50%" /></p>

<h2 id="reference">Reference</h2>
<p>首先是一些主题美化站，deviantart上有很多不错的主题。</p>

<ul>
  <li><a href="http://www.deviantart.com/">deviantART</a></li>
  <li><a href="http://customize.org/">Customize</a></li>
  <li><a href="http://gnome-look.org/">Gnome Look</a></li>
  <li><a href="http://kde-look.org/">KDE Look</a></li>
  <li><a href="http://xfce-look.org/">XFCE Look</a></li>
  <li><a href="http://box-look.org/">Box Look</a></li>
</ul>

<p>然后推荐下archlinux论坛，arch论坛活跃度比较高，大家也都很热情。里面有很难找到的<a href="http://dwm.suckless.org/">DWM</a>资源等等。下面这个子论坛里每个月都有Screenshots Show，各种DE/WM screenshots，总之资源还是比较丰富的。</p>

<ul>
  <li><a href="https://bbs.archlinux.org/viewforum.php?id=47">Artwork and Screenshots</a></li>
</ul>

<h2 id="whats-going-on">What’s Going On</h2>
<p>至于能用Linux多长时间我不知道。有没有Gentoo Notes 03我也不知道。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gentoo notes 01 - start]]></title>
    <link href="http://delta4d.github.io/blog/2013/01/27/gentoo-notes-01/"/>
    <updated>2013-01-27T19:26:00+08:00</updated>
    <id>http://delta4d.github.io/blog/2013/01/27/gentoo-notes-01</id>
    <content type="html"><![CDATA[<h2 id="why-gentoo">Why Gentoo</h2>
<p>久仰Gentoo大名，过去一年断断续续在虚拟机上装过好几次Gentoo了，一直想在实体机上试试，于是趁放假的时候折腾折腾。</p>

<h2 id="start">Start</h2>

<p>Gentoo是编译安装的，于是可以进行相关编译选项优化。同时Gentoo是可以滚动升级的，这样方便不少。开始装机的时候还是想着自己编译内核的，结果开机后不断panic，把我也搞的panic了，于是老老实实用genkernel，以后有机会在好好编译内核吧，先把系统起来在说。很多用户觉得Gentoo编译太费时间了，所以不选择Gentoo，但装机大多都是可以一劳永逸的，配置好后并不会频繁的装软件了。装好基本系统其实还是比较快的，使用genkernel也只用了一个小时左右，装好X然后装DE便会比较慢了，键盘控，喜欢轻量级的话装个WM是便会很快了。</p>

<h2 id="errors">Errors</h2>

<p><code>
!!The filesystem mounted at /dev/sdb3 does not appear to be a valid /. Try again 
!!Could not find the root block device in. 
Please specify another value or: press Enter for the same , type "shell" ......
</code></p>

<p>可能是grub.conf写错了，需要注意一下两个变量：</p>

<ul>
  <li><code>root (hd0,0)</code>指/boot在/dev/sda1。(hd0,0-3)表示四个主分区，(hd0,&gt;3)表示逻辑分区，其中grub从0开始，而linux从1开始表示分区。</li>
  <li><code>real_root=/dev/sdax</code>指/在/dev/sdax</li>
</ul>

<p>startx的时候出现no screens found
   可能是显卡驱动装的不对，可以执行<code>emerge -av $(qlist -IC x11-drivers)</code>，我的是nvidia，在make.conf中设置好<code>VIDEO_CARDS="nvidia"</code>，然后装好n卡驱动，在执行<code>nvidia-xconfig</code>后就可以了。</p>

<p>emerge complains  <a href="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=2&amp;chap=1">click me!</a></p>

<h2 id="why-gentoo-again">Why Gentoo Again</h2>
<ol>
  <li>漂亮的字符界面。第一次虚拟机装Gentoo时的最深的印象。</li>
  <li>强大的portage和emerge。portage告诉emerge在哪里下载源代码，编译选项是什么。</li>
  <li>overlay？就目前的感觉想archlinux的aur。里面应该有不少好玩的东西。</li>
  <li>详尽的文档。</li>
  <li>……</li>
</ol>

<p>实体机用了才不到两天，还有好多好多东西需要学习和探索。Happy Hunting。</p>

<h2 id="de-vs-wm">DE vs WM</h2>
<p>一开始想装wm的，因为在<a href="https://bbs.archlinux.org/viewforum.php?id=47">archlinux forum</a>里看到很多wm非常漂亮，还有很多<a href="https://bbs.archlinux.org/viewtopic.php?id=138281">轻量级软件</a>提供选择。也确实一开始试的是openbox和monsterwm的，还是不习惯。最后换成了KDE，其实KDE以前没怎么用过（其实连linux都没怎么用过，总是不知不觉切会win后就不再进入linux了），就目前来看KDE表现还是不错的，但还是有些问题没有解决。。一开始挺好的，但是感觉有些不稳定，无法启动kde程序，gtk倒是没问题，后来删除了~/.kde4恢复默认设置倒是好了。另外qtconfig配置无法保存，这个直接导致了有些qt程序字体比较难看等。</p>

<h2 id="octopress-in-gentoo">Octopress in Gentoo</h2>

<p><code>
...custom_require.rb:36:in 'require': cannot load such file auto_gem (LoadError)
...custom_require.rb:36:in 'require'
</code></p>

<p><code>unset RUBYOPT</code> fix it.</p>

<p>```
Building site: source -&gt; public
File “<string>", line 1
import sys; print sys.executable</string></p>
<p>SyntaxError: invalid syntax
```</p>

<p>Follow <a href="http://blog.gonzih.org/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux/">this</a>. But I change rubypython from 0.5.3 to 0.6.3 in Gemfile.lock, it fixs everything I ran into..</p>

<h2 id="reference">Reference</h2>
<ol>
  <li><a href="http://www.google.com">Google</a></li>
  <li><a href="http://www.gentoo.org/doc/en/handbook/">Gentoo Handbook</a></li>
  <li><a href="http://www.gentoo.org/doc/en/xorg-config.xml">Gentoo Xorg</a></li>
</ol>

<h2 id="whats-going-on">What’s Going On</h2>
<p>Keep Using, Keep Hunting。有没有gentoo notes 02我也不知道。。</p>
]]></content>
  </entry>
  
</feed>
