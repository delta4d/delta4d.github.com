<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | LOST]]></title>
  <link href="http://delta4d.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://delta4d.github.com/"/>
  <updated>2013-01-14T19:36:48+08:00</updated>
  <id>http://delta4d.github.com/</id>
  <author>
    <name><![CDATA[delta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[linux终端在同一行输出结果]]></title>
    <link href="http://delta4d.github.com/blog/2012/12/11/sh-deleting-one-line/"/>
    <updated>2012-12-11T16:00:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/12/11/sh-deleting-one-line</id>
    <content type="html"><![CDATA[<p>最近了解了一下<a href="http://dwm.suckless.org/">dwm</a>，想定制下状态栏，于是首先想写一个检测内存的脚本。脚本并不复杂，但仍然用了好多时间来查找资料，使用linux果然还是要多写程序脚本啊。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>mem_used.sh  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function get_mem_used <span class="o">{</span>
</span><span class='line'>	<span class="nb">eval</span> &lt;code&gt;free -m | awk <span class="s1">&#39;NR==3 {printf &quot;used=%.2lf per=%.2lf&quot;, $3, 100*$3/($3+$4)}&#39;</span>&lt;/code&gt;
</span><span class='line'>	<span class="nb">echo</span> “MEM:<span class="nv">$per</span>%<span class="o">(</span><span class="nv">$used</span> MB<span class="o">)</span>”
</span><span class='line'><span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;while <span class="nb">true</span>; <span class="k">do</span>
</span><span class='line'><span class="k">	</span><span class="nb">echo</span> &lt;code&gt;get_mem_used&lt;/code&gt;
</span><span class='line'>	sleep 1
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>将会产生如下的输出：</p>

<p><code>
MEM:25.07%(758.00 MB)
MEM:25.04%(757.00 MB)
MEM:25.07%(758.00 MB)
</code></p>

<p>然后我就想如何能让每条记录都在同一行更新，man echo will be helpful。首先使用-e选项开启转义符，\b即为退格</p>

<p>于是可以这样</p>

<p><code>
echo -e "foo"
echo -e "\b\b\bbar"
</code></p>

<p>但是echo默认输出了换行，于是需要开启-n去掉换行</p>

<p><code>
echo -ne "foo"
echo -ne "\rbar"
</code></p>

<p>这样将会产生正确输出，但是这样太麻烦了，有些时候\b太多，有些时候甚至不能确定有多少个\b</p>

<p>于是可以使用\r，它的作用是使当前光标回到当前行首</p>

<p><code>
echo -ne "foo"
echo -ne "\rbar"
</code></p>

<p>这样就可以了。但是当每次记录长度不一样时还是会出错，比如</p>

<p><code>
echo -ne "barbar"
echo -ne "\rfoo"
</code></p>

<p>这样会输出foobar而不是foo</p>

<p>后来查阅资料说可以使用<a href="http://wiki.bash-hackers.org/scripting/terminalcodes">terminalcodes</a></p>

<p><code>
echo -ne "barbar"
echo -ne "\033[1K\rfoo"
</code></p>

<p>即首先清空行首到当前位置的内容，然后光标回行首，再输出foo</p>

<p>利用以上说的便可以实现很多linux程序等待时出现的<code>/|\-</code>旋转效果</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rotate.sh  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function rotate <span class="o">{</span>
</span><span class='line'>	<span class="nv">cnt</span><span class="o">=</span>0
</span><span class='line'>	<span class="k">while </span><span class="nb">true</span>; <span class="k">do</span>
</span><span class='line'><span class="k">		case</span> <span class="nv">$cnt</span> in
</span><span class='line'>			0<span class="o">)</span> <span class="nb">echo</span> -ne “|<span class="se">\r</span>”;;
</span><span class='line'>			1<span class="o">)</span> <span class="nb">echo</span> -ne “/<span class="se">\r</span>”;;
</span><span class='line'>			2<span class="o">)</span> <span class="nb">echo</span> -ne “-<span class="se">\r</span>”;;
</span><span class='line'>			3<span class="o">)</span> <span class="nb">echo</span> -ne “<span class="se">\r</span>”;;
</span><span class='line'>			*<span class="o">)</span> <span class="nb">exit</span> -1;;
</span><span class='line'>		<span class="k">esac</span>
</span><span class='line'><span class="k">		</span>sleep 0.2
</span><span class='line'>		<span class="o">((</span> <span class="nv">cnt</span><span class="o">=(</span>cnt+1<span class="o">)</span>%4 <span class="o">))</span>
</span><span class='line'>	<span class="k">done</span>
</span><span class='line'><span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rotate
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Evince中文显示错误]]></title>
    <link href="http://delta4d.github.com/blog/2012/11/23/evince-display-chinese-wrong/"/>
    <updated>2012-11-23T19:06:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/11/23/evince-display-chinese-wrong</id>
    <content type="html"><![CDATA[<p>今天用Evince打开一个pdf，本来应该显示中文的地方都是空白，google后发现是<a href="http://poppler.freedesktop.org">poppler</a>的问题，缺少了编码集poppler-data，那么安装好这个包就可一了</p>

<p>on debian</p>

<p><code>
sudo apt-get install poppler-data
</code></p>

<p>on archlinux</p>

<p><code>
sudo pacman -S poppler-data
</code></p>

<p>于是基于poppler的pdf阅读器就都有可能出现这个问题，详见<a href="http://en.wikipedia.org/wiki/Poppler_(software)#PDF_readers_using_Poppler">PDF Readers Using Poppler</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Pacman] "filesystem: /etc/mtab exists in filesystem"]]></title>
    <link href="http://delta4d.github.com/blog/2012/02/29/pacman-fiwlesystem-mtab-exists-in-filesystem/"/>
    <updated>2012-02-29T11:11:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/02/29/pacman-fiwlesystem-mtab-exists-in-filesystem</id>
    <content type="html"><![CDATA[<p>fixed by</p>

<p><code>sh
pacman -S filesystem --force
</code></p>

<p><a href="http://www.archlinux.org/news/filesystem-upgrade-manual-intervention-required/">http://www.archlinux.org/news/filesystem-upgrade-manual-intervention-required/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux音频乱码]]></title>
    <link href="http://delta4d.github.com/blog/2012/01/26/linux-audio-garbled/"/>
    <updated>2012-01-26T20:20:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/01/26/linux-audio-garbled</id>
    <content type="html"><![CDATA[<p>mp3文件采用gbk编码，而linux使用utf8，所以会造成混乱</p>

<p>使用python-mutagen可以解决</p>

<p><code>sh
mid3iconv -e gbk *.mp3
</code></p>

<p>详细参考：
<a href="http://yp.oss.org.cn/software/show_resource.php?resource_id=313">http://yp.oss.org.cn/software/show_resource.php?resource_id=313</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[start ibus at boot]]></title>
    <link href="http://delta4d.github.com/blog/2012/01/25/start-ibus-at-boot/"/>
    <updated>2012-01-25T19:59:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/01/25/start-ibus-at-boot</id>
    <content type="html"><![CDATA[<p>backup</p>

<p>~/.profile</p>

<p><code>sh
# ibus start at boot
export XMODIFIERS=@im=ibus
export GTK_IM_MODULE=ibus
export QT_IM_MODULE=ibus
ibus-daemon -d -x
</code></p>
]]></content>
  </entry>
  
</feed>
