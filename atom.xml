<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[LOST]]></title>
  <link href="http://delta4d.github.com/atom.xml" rel="self"/>
  <link href="http://delta4d.github.com/"/>
  <updated>2012-12-26T22:18:01+08:00</updated>
  <id>http://delta4d.github.com/</id>
  <author>
    <name><![CDATA[delta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[情人无泪]]></title>
    <link href="http://delta4d.github.com/blog/2012/12/16/lover-no-tears/"/>
    <updated>2012-12-16T10:27:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/12/16/lover-no-tears</id>
    <content type="html"><![CDATA[<p>最近闲里偷忙看完了<a href="http://zh.wikipedia.org/wiki/%E5%BC%B5%E5%B0%8F%E5%AB%BB">张小娴</a>的”情人无泪”，因为是小说精选集，实际上包含了三部小说：卖海豚的女孩，离别曲，和情人无泪。</p>

<p>我不止一次的在心里对自己说“多读些书吧”，大学四年倒是摸过一些书，每次都等到有罚款通知了再把书原封不动的送回图书馆。这学期在98读书版精华区看到有人推荐张小娴的书，便去图书馆借了本“情人无泪”。借书的时候还有件好玩的事，文学类的书都在走廊两边的架子上放着，找了很久，终于在某个书架最底层发现了六本精选集，我随手拿起一本翻着，这时有一个女孩走了过来，蹲下去也拿起了一本，然而很快又放了回去，站了起来，一动不动。旁边静静的杵了一个人总让人觉得有些不自在，于是把书放了回去，这时只见那个女孩迅速蹲下，拿起我刚放下的书，回头就跑。我恍然大悟。</p>

<p>三部小说都比较偏伤感，情人无泪最后真是噙着眼泪读的，我大概还是比较习惯喜剧的东西，就好象Friends和武林外传可以一遍一遍不停的看。本科时有个室友读书时总会先看最后一页，如果是好的结局的话才会开始看这本书，幸好我没有这么做。</p>

<p>三部小说里都有人死去，缇缇带着幸福，夏薇带着悲哀，苏明慧是带着梦想吗。我总觉得很多悲剧本不必如此，很多情况真是一句话可以解决的事情，人可能就是这么固执吧。</p>

<p>沈鱼和翁信良终没有走到一起，从来没有人知道夏薇有一台小绵羊，苏明慧还是到了失明的那一天，本想带给许宏志惊喜去买画具，结果却。。</p>

<p>很多年过去了，还是不会写读后感。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux终端在同一行输出结果]]></title>
    <link href="http://delta4d.github.com/blog/2012/12/11/sh-deleting-one-line/"/>
    <updated>2012-12-11T16:00:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/12/11/sh-deleting-one-line</id>
    <content type="html"><![CDATA[<p>最近了解了一下<a href="http://dwm.suckless.org/">dwm</a>，想定制下状态栏，于是首先想写一个检测内存的脚本。脚本并不复杂，但仍然用了好多时间来查找资料，使用linux果然还是要多写程序脚本啊。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>mem_used.sh  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">#!/bin/bash</span>
</span><span class="line">
</span><span class="line"><span class="k">function </span>get_mem_used <span class="o">{</span>
</span><span class="line">	<span class="nb">eval</span> <span class="sb">`</span>free -m | awk <span class="s1">&#39;NR==3 {printf &quot;used=%.2lf per=%.2lf&quot;, $3, 100*$3/($3+$4)}&#39;</span><span class="sb">`</span>
</span><span class="line">	<span class="nb">echo</span> <span class="s2">&quot;MEM:$per%($used MB)&quot;</span>
</span><span class="line"><span class="o">}</span>
</span><span class="line">
</span><span class="line"><span class="k">while </span><span class="nb">true</span>; <span class="k">do</span>
</span><span class="line"><span class="k">	</span><span class="nb">echo</span> <span class="sb">`</span>get_mem_used<span class="sb">`</span>
</span><span class="line">	sleep 1
</span><span class="line"><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>将会产生如下的输出：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">MEM:25.07%(758.00 MB)
</span><span class="line">MEM:25.04%(757.00 MB)
</span><span class="line">MEM:25.07%(758.00 MB)</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后我就想如何能让每条记录都在同一行更新，man echo will be helpful。首先使用-e选项开启转义符，\b即为退格</p>

<p>于是可以这样</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">echo -e "foo"
</span><span class="line">echo -e "\b\b\bbar"</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>但是echo默认输出了换行，于是需要开启-n去掉换行</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">echo -ne "foo"
</span><span class="line">echo -ne "\rbar"</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样将会产生正确输出，但是这样太麻烦了，有些时候\b太多，有些时候甚至不能确定有多少个\b</p>

<p>于是可以使用\r，它的作用是使当前光标回到当前行首</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">echo -ne "foo"
</span><span class="line">echo -ne "\rbar"</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样就可以了。但是当每次记录长度不一样时还是会出错，比如</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">echo -ne "barbar"
</span><span class="line">echo -ne "\rfoo"</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样会输出foobar而不是foo</p>

<p>后来查阅资料说可以使用<a href="http://wiki.bash-hackers.org/scripting/terminalcodes">terminalcodes</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">echo -ne "barbar"
</span><span class="line">echo -ne "\033[1K\rfoo"</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>即首先清空行首到当前位置的内容，然后光标回行首，再输出foo</p>

<p>利用以上说的便可以实现很多linux程序等待时出现的<code>/|\-</code>旋转效果</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>rotate.sh  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">#!/bin/bash</span>
</span><span class="line">
</span><span class="line"><span class="k">function </span>rotate <span class="o">{</span>
</span><span class="line">	<span class="nv">cnt</span><span class="o">=</span>0
</span><span class="line">	<span class="k">while </span><span class="nb">true</span>; <span class="k">do</span>
</span><span class="line"><span class="k">		case</span> <span class="nv">$cnt</span> in
</span><span class="line">			0<span class="o">)</span> <span class="nb">echo</span> -ne <span class="s2">&quot;|\r&quot;</span>;;
</span><span class="line">			1<span class="o">)</span> <span class="nb">echo</span> -ne <span class="s2">&quot;/\r&quot;</span>;;
</span><span class="line">			2<span class="o">)</span> <span class="nb">echo</span> -ne <span class="s2">&quot;-\r&quot;</span>;;
</span><span class="line">			3<span class="o">)</span> <span class="nb">echo</span> -ne <span class="s2">&quot;\\r&quot;</span>;;
</span><span class="line">			*<span class="o">)</span> <span class="nb">exit</span> -1;;
</span><span class="line">		<span class="k">esac</span>
</span><span class="line"><span class="k">		</span>sleep 0.2
</span><span class="line">		<span class="o">((</span> <span class="nv">cnt</span><span class="o">=(</span>cnt+1<span class="o">)</span>%4 <span class="o">))</span>
</span><span class="line">	<span class="k">done</span>
</span><span class="line"><span class="o">}</span>
</span><span class="line">
</span><span class="line">rotate
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[家路]]></title>
    <link href="http://delta4d.github.com/blog/2012/12/10/music-moved/"/>
    <updated>2012-12-10T22:23:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/12/10/music-moved</id>
    <content type="html"><![CDATA[<p>平常听歌都喜欢随便在豆瓣虾米百度什么的打开随便听听，今天偶然听到一阵旋律，眼角突然就挂上了泪，是一首日文歌，其实歌词也不懂，但突然就很有感触。后来看了下歌曲，是<a href="http://ja.wikipedia.org/wiki/%E4%B8%AD%E5%AD%9D%E4%BB%8B">中孝介</a>的”家路”，原来我只是不知不觉想家了。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class=""><span class="line">ひそやかに 影を落とす                   	华灯初上 影子静静地
</span><span class="line">夕映えの街に 灯がともる顷               	留在泻满夕阳的大街上
</span><span class="line">未知し风 吹かれて君は                   	被陌生的风吹拂著的你
</span><span class="line">离れた空の下 何を想う                   	在他乡想著什麼呢
</span><span class="line">足早に过ぎゆく夕空に飞び立つ            	如同掠过暮霭而
</span><span class="line">鸟の群れが家路を辿るように              	归巢的那群鸟一样
</span><span class="line">ここへ戻っておいで君の休まる场所へ      	回来吧 沿著归途
</span><span class="line">空の向こうで明日が手招いてる            	在天空的彼端 明日正在召唤
</span><span class="line">いくつもの梦を数え                      	屈指可数的梦
</span><span class="line">谁もが答えを探している                  	谁都在追寻著答案
</span><span class="line">足早に行き交う人波に 纷れて             	清晨急匆匆的人群
</span><span class="line">君らしさを见失ったなら                  	模糊了你的模样
</span><span class="line">ここへ戻っておいで羽を休める场所へ      	回来吧 沿著归途
</span><span class="line">今日という日を好きになれますように      	珍惜每一个今天
</span><span class="line">今君が流した いとしいその涙が           	而今 若为擦乾你的泪光
</span><span class="line">乾くのなら仆は风にでもなろう            	我愿意化作清风
</span><span class="line">ここへ戻っておいで君の休まる场所へ      	回来吧 沿著归途
</span><span class="line">相変わらずの笑颜で                      	用不变的笑容
</span><span class="line">明日を恙无(つつがな)く过ごせますように  	祈愿明天平安顺利</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Evince中文显示错误]]></title>
    <link href="http://delta4d.github.com/blog/2012/11/23/evince-display-chinese-wrong/"/>
    <updated>2012-11-23T19:06:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/11/23/evince-display-chinese-wrong</id>
    <content type="html"><![CDATA[<p>今天用Evince打开一个pdf，本来应该显示中文的地方都是空白，google后发现是<a href="http://poppler.freedesktop.org">poppler</a>的问题，缺少了编码集poppler-data，那么安装好这个包就可一了</p>

<p>on debian</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo apt-get install poppler-data</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>on archlinux</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -S poppler-data</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>于是基于poppler的pdf阅读器就都有可能出现这个问题，详见<a href="http://en.wikipedia.org/wiki/Poppler_(software)#PDF_readers_using_Poppler">PDF Readers Using Poppler</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM function already exists]]></title>
    <link href="http://delta4d.github.com/blog/2012/11/16/vim-function-already-exists/"/>
    <updated>2012-11-16T23:55:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/11/16/vim-function-already-exists</id>
    <content type="html"><![CDATA[<p>由于每次修改vimrc后都要重启vim才会在读取配置文件，感觉非常麻烦。（汗，认识vim时间也不短了，但一直木有进步。。）后来觉得可以source，于是自定义了快捷键</p>

<pre><code>map &lt;silent&gt; &lt;leader&gt;ss :!source ~/.vimrc
</code></pre>

<p>但是显示了一大堆错误，大家可能已经看出来了，对的，不应该加<em>!</em>的，vimrc不应该由shell来解释，而应该由vim解释，于是修改为：</p>

<pre><code>map &lt;silent&gt; &lt;leader&gt;ss :source ~/.vimrc
</code></pre>

<p>但是这样会出现<em>function xxx already exists add ! to replace it</em>的警告，按照提示在function后加上!就可以消除警告了，这是由于如果函数出现过，加入!会redifine。555，rbl。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[latex test]]></title>
    <link href="http://delta4d.github.com/blog/2012/11/11/latex-test/"/>
    <updated>2012-11-11T23:33:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/11/11/latex-test</id>
    <content type="html"><![CDATA[<p>$\LaTeX$ using kramdown</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
  & \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
  & (x_1, \ldots, x_n) \left( \begin{array}{ccc}
      \phi(e_1, e_1) & \cdots & \phi(e_1, e_n) \\
      \vdots & \ddots & \vdots \\
      \phi(e_n, e_1) & \cdots & \phi(e_n, e_n)
    \end{array} \right)
  \left( \begin{array}{c}
      y_1 \\
      \vdots \\
      y_n
    \end{array} \right)
\end{align*}
 %]]&gt;</script>

<p>see <a href="http://chuchao333.github.com/blog/2012/08/18/supporting-latex-in-octopress/">this</a> for more details</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[use octopress on a new computer]]></title>
    <link href="http://delta4d.github.com/blog/2012/11/10/use-octopress-on-a-new-computer/"/>
    <updated>2012-11-10T19:37:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/11/10/use-octopress-on-a-new-computer</id>
    <content type="html"><![CDATA[<p>when you are bloging with octopress, don’t forget the following commands</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git add .
</span><span class="line">git commit -m 'ur commit'
</span><span class="line">git push origin source</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>then when you are on another computer, trying to setup a bloging enviroment with octopress, because ‘rake deploy’ upload the generated files, so it needs a little work, you can go like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git clone git@github.com:username/username.github.com.git
</span><span class="line">$ cd username.github.com
</span><span class="line">username.github.com$ git checkout source
</span><span class="line">username.github.com$ mkdir _deploy
</span><span class="line">username.github.com$ cd _deploy
</span><span class="line">username.github.com/_deploy$ git init
</span><span class="line">username.github.com/_deploy$ git remote add origin git@github.com:username/username.github.com.git
</span><span class="line">usename.github.com/_deploy$ git pull origin master
</span><span class="line">usename.github.com/_deploy$ cd ..</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>reference:
<a href="http://code.dblock.org/octopress-setting-up-a-blog-and-contributing-to-an-existing-one">dblock.org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[n个小球放进m个盒子]]></title>
    <link href="http://delta4d.github.com/blog/2012/10/12/n-ball-2-m-box/"/>
    <updated>2012-10-12T21:02:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2012/10/12/n-ball-2-m-box</id>
    <content type="html"><![CDATA[<p>基本的排列组合问题，因为老碰到，所以稍微做下总结。  </p>

<p>一般可以按照球是否可区别，盒子是否可区别，盒子是否可空，分为2^3=8种情况，但是实际上总可以通过调整使得盒子可空转化为盒子不可空的情况，比如有n个小球，m个盒子，设每个盒子内小球数量为x[i]，那么x[1]+x[2]+…+x[m]=n，那么通过变换x’[i] = x[i] + 1，变为x’[1]+x’[2]+…+x’[m]=n+m，于是转化为将n+m个小球放入m个盒子，盒子不能为空的问题。有些情况下要    求某些盒子不为空，有些可空，那么对相应的x[i]做以上变换即可。于是接下来的讨论都是针对盒子非空的情况，共有2^2=4种情形：  </p>

<h3 id="section">1. 小球无区别，盒子有区别</h3>
<p>这是四种情况里最简单的一种，也是最常见的一种，共有C(n-1,m-1)种放法，可以由隔板法得到结果。  </p>

<h3 id="section-1">2. 小球无区别，盒子无区别</h3>
<p>用f(x,y)表示x个无区别小球放入y个无区别盒子的方法数，考虑<br />
x[1]+x[2]+…+x[y]=x……(1)<br />
(x[1]-1)+(x[2]-1)+…+(x[y]-1)=x-y……(2)<br />
考虑满足x[i]=1的i的个数，如果有k个i满足x[i]=1，那么(2)中将会少k项，即为将x-y个小球放入y-k个盒子的方法数，即f(x-y,y-k)<br />
让k跑遍0到y，于是f(x,y)=f(x-y,0)+f(x-y,1)+f(x-y,2)+…+f(x-y,y)<br />
那么f(x-1,y-1)=f(x-y,0)+f(x-y,1)+…+f(x-y,y-1)<br />
将两式相减，得到f(x,y)-f(x-1,y-1)=f(x-y,y)，于是f(x,y)=f(x-1,y-1)+f(x-y,y)<br />
初始条件为f(x,1)=f(x,x)=1<br />
再回头看看这个递推式，其实对于f(x,y)，考虑以下两种情况：<br />
若有一个盒子内的小球数等于1，不妨设为x[1]，那么拿掉x[1]后就是x-1个小球放入y-1个盒子的情况<br />
若每个盒子内的小球数都大于1，那么从每个盒子中都拿走一个小球，就变为了x-y个小球放入y个盒子的情况<br />
于是也可以得到f(x,y)=f(x-1,y-1)+f(x-y,y)<br />
由于数学能力有限，暂不清楚是否有收敛的形式。  </p>

<h3 id="section-2">3. 小球有区别，盒子无区别</h3>
<p>这实际上就是<a href="http://en.wikipedia.org/wiki/Stirling_number">第二类Stirling数</a><br />
设S(x,y)表示x个有区别小球放入y个无区别盒子的方法数。那么考虑某个特定小球：<br />
如果它单独放到了某个盒子里，去掉这个盒子的话，就转化为x-1个小球放入y-1个盒子的情况，即S(x-1,y-1)。<br />
如果它和其他的小球共同在一个盒子里，那么去掉这个小球，就转化为x-1个小球放入y个盒子的情况，这个小球可以在y个盒子里任意一个，共y种情况，共y<em>S(x-1,y)种情况<br />
所以：S(x,y)=S(x-1,y-1)+y</em>S(x-1,y)<br />
初始条件为：S(x,1)=S(x,x)=1  </p>

<h3 id="section-3">4. 小球有区别，盒子有区别</h3>
<p>和上边的情况类似，只是加了盒子有区别，那么当分好小球后，再加上盒子的排列数就好了，共有m!S(n,m)种放法。  </p>

<p>by delta</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MAC安装记]]></title>
    <link href="http://delta4d.github.com/blog/2011/11/10/mac-install/"/>
    <updated>2011-11-10T23:28:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/11/10/mac-install</id>
    <content type="html"><![CDATA[<p>想装MAC纯属瞎折腾，现在装好了也一直扔在那里没有用。。</p>

<p>10月份的时候在试着装Lion，结果每次在安装进度条20%的时候就死掉了，现在装的是东皇SL v3，先说下我的配置：</p>

<p>DELL INSPIRON 1318</p>

<p>网卡 BCM5906(wired)，BCM4312(wireless)</p>

<p>显卡 GeForce 8400M GS</p>

<p>声卡 Sigmatel@Intel 82801(Ich8)</p>

<p>其实装MAC最重要的是看有没有对应的硬件驱动，如果都有的话就差不多了，至于其他的条件，可以到<a href="http://bbs.pcbeta.com/">远景论坛</a>查看。</p>

<p>黑苹果的安装教程一开始看着感觉好多，现在装好了其实也没有几步，下面是在WIN下的安装教程的简单步骤，具体操作还是要自仔细看教程</p>

<ol>
  <li>
    <p>现在镜像，分为原版和破解版，破解版安装较为容易，原版以后可以试试，不过看教程都差不太多</p>
  </li>
  <li>
    <p>安装变色龙引导或bootthink</p>
  </li>
  <li>
    <p>将镜像dump到磁盘分区或U盘（工具为Leopard hd install helper），也可以刻盘。如何分区什么的就不说了</p>
  </li>
  <li>
    <p>添加对应kext（内核扩展），通常用于设备驱动程序，放在根目录Extra/Extensions下，一开始只放必要的几个就可以了</p>
  </li>
  <li>
    <p>不断的troubleshooting直至安装成功，我重启了不下二十次，镜像也dump了很多次，这个过程很需要耐心</p>
  </li>
  <li>
    <p>用WINPE将C盘重新设置为活动分区</p>
  </li>
  <li>
    <p>将启动盘下的kext拷到MAC根目录下，接下来还是不断的重启再troubleshooting，这里的kext可能要比安装镜像的多一点</p>
  </li>
  <li>
    <p>装硬件驱动</p>
  </li>
</ol>

<p>[备忘]</p>

<p>驱动盘kext：</p>

<p>AppleACPIPS2Nub.kext</p>

<p>ApplePS2Controller.kext</p>

<p>FakeSMC.kext</p>

<p>MAC盘kext:</p>

<p>AppleACPIPS2Nub.kext</p>

<p>ApplePS2Controller.kext</p>

<p>FakeSMC.kext</p>

<p>NullCPUPowerManagement.kext</p>

<p>硬件驱动：</p>

<p>GeForce 8400M GS: Natit.kext</p>

<p>BCM5906: BCM5906MEthernet.kext</p>

<p>Sigmatel@Intel 82801: VoodooHDA.kext</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2011-10]]></title>
    <link href="http://delta4d.github.com/blog/2011/11/06/2011-10/"/>
    <updated>2011-11-06T13:35:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/11/06/2011-10</id>
    <content type="html"><![CDATA[<p>wordpress又被墙了，90代理也挂了一阵，想更新下blog真不容易啊</p>

<p>记过去的10月：</p>

<ol>
  <li>
    <p>本不打算读研的我，被肥羊pia去试着保研，最后很幸运的获得外推去上海交大的机会。9月份的时候学校免试生面试，本以为到下午才会轮到我的，结果当下午去后却发现我们组就只剩我一个人没有面试了（人生中的第一次面试就迟到了= =），抽好签拿着英文阅读材料就进去了，总共大概7个老师，看起来都很和蔼。因为迟到了，所以没时间看材料，老师让我当场看然后问了我一个自然段的大概意思，我就说了一句，然后就冷场了，连忙补了句that’s all。后来老师问我认为自己的优点是什么，我顿时哑口无言，坐在凳子上低着头，去回避老师的目光。老师后来说我的目的太不明确了，这样的话没有导师敢要我的。事实上我确实不明白自己会什么，要什么，是什么。过了两天是上机考试，本来以为凭着ACM的基础可以轻松过关的，但实际上却遭遇了很多不顺，最终虽然排名不错但是成绩着实糟糕，正经写出的题目就只有签名题。</p>

    <p>10月初上交那边要面试，我们一共9个人浩浩荡荡就杀往了上海，这是我第一次去上海，第一次坐高铁，第一次做动车，第一次坐地铁。上海并不像脑子里的想象，不过第一印象还是不错的。到了上交后本以为是团面，后来被告知是单面，我暗自庆幸了一下，团面的话我可能除了说下名字后就不会插话了。因为我顺序靠后，听前面面完的同学说有英文自我介绍，我想了一会儿，发现除了名字好像就没什么说的了。到我面试的时候说了不到10秒钟，that’s all之后老师们都很意外，我只能苦笑。后来老师看我成绩不高，又没项目经验，虽然说搞ACM，但是又没有什么获奖经历，前者我只能说平时不努力后者我只好自嘲道成长比较慢。有一个老师问我学的最好的是哪门学科，我很虚的说C语言，幸亏只是问了些基础的数据结构方面的（这和C好像关系不大。。），后来又有老师问我印象最深的学科，我说数学分析，后来问了我一个极限问题：百米世界纪录有没有极限。我听到的第一反应就是完了，后来镇静了一下想到时间肯定是大于0的，就说因为是有界递减序列所以极限存在，其实我很害怕老师追问极限的相关东西了，我实在已经忘的差不多了，后来谢天谢地，老师没有再问，我可能是当时我们组里面试时间最短的了吧。</p>

    <p>ps:写简历的时候我居然先写的英文简历后来翻译成中文，后来一直没有想通为什么。。</p>
  </li>
  <li>
    <p>就在上交面试的那个礼拜周末，我再次去了上海，这是我大学中的第一次ACM/ICPC regional比赛，浙大6支队伍全部出动。</p>

    <p>星期5到了宾馆，和riversouther一个房间，折腾了好一会儿网络，然后晚上去吃饭，赞于指导的bg。第二天行程被安排满了，第一次去复旦，发现大学其实都差不多，只是感觉人出奇的少。晚上吃完晚宴，回宾馆玩了一会儿空轨后追随集训队传统我们队一块看了《非诚勿扰》，第一次完整的看这样的节目，发现还需要习惯一下。据说每成功一对rp++，那天成功了三对，心情不错，大概11点半就睡了。</p>

    <p>星期天比赛前我们三个都蹲了大号，由于找厕所耗费了不少体力= =，我和肥羊还担心riversouther在比赛前能不能赶回来。比赛开始后，1个小时过去了，没有过题…4个小时过去了，没有过题，过得最多的那个题目是真心搞不出来，封board之后，跑了一个小时的表终于跑完了，写了几十兆的程序交上去，后来弹出了一个是否确认提交的窗口，心想这下没戏了，后来居然返回yes。其实最后时刻想乱搞A的，当时有一个想法闪了一下，但是没乱搞，后来听说那样居然可以过，懊恼啊。这场比赛对难度估计不足，4个小时没有过题，加上看错题目，sample是退化三角形，我们居然都没有画一画，而去错误的排除了这种情况。糊里糊涂第一次regional就这样结束了，后来shi哥过来问我们情况，说道还有福州。</p>
  </li>
</ol>

<p>ps:FutureGazer普吉加油，RunForDream&amp;PIA福州加油!</p>

<p>pss: FutureGazer普吉夺冠，大赞！！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux开机加载NTFS分区]]></title>
    <link href="http://delta4d.github.com/blog/2011/09/06/archlinux-load-ntfs-partion-at-boot/"/>
    <updated>2011-09-06T09:47:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/09/06/archlinux-load-ntfs-partion-at-boot</id>
    <content type="html"><![CDATA[<p>修改/etc/fstab文件，添加如下内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">/dev/sda1 /media/sda1 ntfs-3g defaults,locale=zh_CN.UTF8 0 0
</span><span class="line">/dev/sda2 /media/sda2 ntfs-3g defaults,locale=zh_CN.UTF8 0 0</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>需要注意几点：</p>

<ol>
  <li>/dev/sdax为电脑上对应的分区，视具体情况而定</li>
  <li>/media/sdax为/media中的目录需要提前建立好，名字任意</li>
  <li>ntfs-3g需要提前安装好，其后所接的参数可以通过手册来查询</li>
</ol>

<p>reference:</p>

<ul>
  <li><a href="http://en.wikipedia.org/wiki/Fstab">fstab具体参数意义及书写格式</a></li>
  <li>man fstab</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开学了]]></title>
    <link href="http://delta4d.github.com/blog/2011/09/05/school-open/"/>
    <updated>2011-09-05T21:15:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/09/05/school-open</id>
    <content type="html"><![CDATA[<p>开学第一天，稍微回顾下这个可能是我最后的一个暑假。</p>

<p>7月份在参加ACM的集训，和去年不同的是今年认识了更多的人，一块相互鼓励相互探讨，最终能够一块进入8月份集训名单着实非常开心。期间回家了两个礼拜，家人还是一如既往的让我考虑下考研的事情，但不知为什么，我总是提不起兴趣，不知道自己现在为什么对考试什么的比较抵触，也很久没有那种静下心来踏踏实实做事情的时候了。我不清楚这3年的时光里，我的身上到底发生了什么，可能唯一能确定的就是比以前更懒了吧。今年世园会在西安举行，母亲很早以前就对我说作为西安人总要去一下的，我在家的那段时间母亲也催了我不少次，我也不清楚自己哪里来的倔强，总之就是不想出去，很多时候不想走路，不想说话，大部分时间不是在沙发上就是在床上。有一天很早母亲就叫我说今天去世园会逛逛，我头埋在被窝里说到不去不去，母亲后来就没有再问我，我也永远不会知道留在卧室门口的母亲会挂着一副怎样的表情。在家的时间总是特别悠闲和舒服，花了一个下午和一个上午的时间搞好了arch，gnome3的确漂亮了不少，用习惯了感觉还是不错的，就是arch的东西好难配啊，网络，字体等等，现在还有很多东西没有搞好…</p>

<p>晒晒桌面，貌似gnome3根本没有桌面的概念，居然去除了最小化，不得不说非常大胆</p>

<p><img src="http://delta4d.github.com/images/2011-09-05-archlinux-desktop.png" alt="archlinux gnome3 desktop" /></p>

<p>2个礼拜还看完了两部动漫《高达seed》和《浪客剑心》，都是比较老的动漫了，还是值得一看的。8月中旬回到了学校参加集训，能够和肥羊和riversouther组成RunForDream(RFD同时也是我们三个id的首字母)一起奋战regional很幸运也很高兴，集训的时间总是过得很快，这期间学了不少东西，SCC，2-SAT，最小树形图，还有终于会写二分了。。。8月份又看完了三部动漫(我的时间好多。。)《Fate Stay Night》，《Anohana》(我们仍未知道那天所看见的花的名字，名字好长orz)，《空之境界》，都比较短，《Anohana》还是比较温馨的吧，看过后不禁会想儿时的朋友现在会是怎样的一副模样。fate和空境所阐述的便复杂很多，尤其是空境，很多地方都看不懂，不过还是很喜欢两仪式的。</p>

<p>本以为会写很多花在集训上面，结果写了很多家里和动漫的时光……</p>

<p>I am still on the way, running for dream ……</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[summer2011 goes on]]></title>
    <link href="http://delta4d.github.com/blog/2011/08/17/summer2011-goes-on/"/>
    <updated>2011-08-17T18:30:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/08/17/summer2011-goes-on</id>
    <content type="html"><![CDATA[<p>虽然7月份集训选拔并没有进入前15，但是由于前面有同学不参加比赛所以很幸运可以参加8月份的集训，并且能够和<a href="http://hi.baidu.com/sheep_finalfreedom">肥羊</a>和<a href="http://hi.baidu.com/riversouthers">riversouther</a>组成一队来参加比赛着实让我感觉非常非常的开心和幸运。</p>

<p>集训于昨天已经开始了，一切都是新鲜的，感觉还是很好的，昨天加了ZJU的ACM群，看到hhgg在群里说welcome delta，霎时感觉有一种强烈的归属感，总之是很开心啦，接下来的时间我也要好好努力！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[summer2011 round4 over]]></title>
    <link href="http://delta4d.github.com/blog/2011/07/24/summer2011-round4-over/"/>
    <updated>2011-07-24T19:54:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/07/24/summer2011-round4-over</id>
    <content type="html"><![CDATA[<p>summer2011最后一轮结束，最终rank16。最后一个round contest2暴0了，比较郁闷，不过结果并不算坏，自己差不多也就这个程度吧。</p>

<p>很喜欢集训队的氛围，大家都很好玩，整个过程中我也学到了不少东西，认识了一些朋友，总之，很幸运吧，可以这样度过二十多天。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[summer2011 round3 over]]></title>
    <link href="http://delta4d.github.com/blog/2011/07/18/summer2011-round3-over/"/>
    <updated>2011-07-18T15:49:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/07/18/summer2011-round3-over</id>
    <content type="html"><![CDATA[<p>这一轮数学题特别多，我一看到这种题就很想做，但是都做不出来，&gt;_&lt;，太弱了，每场比赛都有跳坑，有些题目还是可以做的，比赛的时候应该认真想一下的。rating还是处在一个比较尴尬的位置，还有最后一个round，不知道等待我的会是什么结果，每场比赛都要拼出去，嗯嗯。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[summer2011 round2 over]]></title>
    <link href="http://delta4d.github.com/blog/2011/07/12/summer2011-round2-over/"/>
    <updated>2011-07-12T14:33:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/07/12/summer2011-round2-over</id>
    <content type="html"><![CDATA[<p>summer2011第二轮结束，从总的结果来看round1好了一些，最后一场暴0有点不应该，而且有三道题居然都没看过，这个我觉的是不应该的，以后还是先把题目大致浏览一遍再做吧。</p>

<p>round2还是比较有收获的，第一次靠着以前看的一些线段树的思想居然自己写出来了，着实很兴奋。教训有很多，在写代码之前一定要好好审视一下自己的算法，否则浪费的时间就太多了，又影响心情，还有比赛时一定要冷静，有想法的话，要敢于去写，或者尝试换换思维，不要把自己逼近死胡同。</p>

<p>集训已经进行了一半，还有机会，好好加油吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[summer2011 round1 over]]></title>
    <link href="http://delta4d.github.com/blog/2011/07/07/summer2011-round1-over/"/>
    <updated>2011-07-07T17:51:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/07/07/summer2011-round1-over</id>
    <content type="html"><![CDATA[<p>summer2011第一阶段结束了，稍微总结一下。第一场很神奇的贪心过了一道，但是在算期望的题目上，将一个改写n的地方写成了n+1，但是推倒导来的式子却显得格外的漂亮，其实还是自己没搞清楚；第二场很快的过了一道，然后一直在做博弈题而没有去看其他的，其实这个做不出来应该没有什么怨言了，因为我压根就不知道SG的存在么。第三场是我们组的题目，结果没有验出队友数据里的错误，导致vout不断WA，罪过啊。第四场第一道题目经历15次提交才AC，其中还有两次CE，太不小心了，不过终场前的绝杀还是让我感到很爽快的。</p>

<p>总的来说，状况并不是很好，但结果也不是特别糟，还有3轮还有机会，以后每场比赛都要细心，看到题目要敢想敢做，不能在畏首畏尾了，大不了就是个WA么。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ACM集训队选拔结束]]></title>
    <link href="http://delta4d.github.com/blog/2011/06/12/acm-team-selection/"/>
    <updated>2011-06-12T20:41:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/06/12/acm-team-selection</id>
    <content type="html"><![CDATA[<p>集训队选拔在这一周结束了，周末两场比赛，一场第二，一场第七，ym并且祝贺第一次AK的<a href="http://vsforever.co.cc/blog/">vout</a>，拿下了最后一场选拔赛的第一名。</p>

<p>这两场比赛对我刺激还是比较大的，由于数列题较多，我大多都是程序或人肉出前几个数据然后去<a href="http://oeis.org/">数列百科</a>搜出递推公式然后AC的，但是这个在真正比赛中明显是不可以的，所以这两场对于我来说水分很大，以后要好好加强这方面的训练。</p>

<p>记着去年暑假集训的时候，有很多场比赛有那么一道题除我之外其他人全部做出来了，有几场比赛都是以0题结束全场比赛，那种感觉真的异常失落和无奈，但是我依然很喜欢集训队的氛围，里面都是一群可爱的人啊。</p>

<p>只希望今年能够拼尽全力不留遗憾吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2011-05-22]]></title>
    <link href="http://delta4d.github.com/blog/2011/05/22/2011-05-22/"/>
    <updated>2011-05-22T23:00:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/05/22/2011-05-22</id>
    <content type="html"><![CDATA[<p>这个礼拜继续着集训队的选拔，有两场比赛，结果比预想的好，一次第二，一次第六。总的感觉就是不要怕麻烦，要迎头去写，这两次最终都是做出了这种以前很不愿意写的麻烦题，才是排名上升的，对自己的激励是比较大的。今天的比赛收获比较大，学到了一个新的解法，<a href="http://www.matrix67.com/blog/archives/276">矩阵求幂</a>，其实和指数二分求幂是一样的，关键是你能不能将问题用矩阵的形式表现出来。还有5场比赛，好好加油吧。</p>

<p>最近发现做事情的时候时间过得很快，不做事的时候时间也很快，&gt;_&lt;，今天晚上准备把软工课程的project传到校内免费空间上试试的，没想到就这么搞了一晚上还没搞好，因为工程是用zend frmaework做的，起初传上去的时候显示403，经过尝试发现只要把.htaccess文件删掉就好了，登录页显示出来了，但是登录的时候又会产生一大片出错信息，各种找不到啊，觉得应该是删除了.htaccess的问题，就上网查了下怎么配置这个文件，quitely weep，没搞定啊。不过晚上到也不是一点收获都没有，学到了好多mysql的东西，又在空间上折腾了下wordpress，自己配置了一下，装了插件和主题，算是把基本操作熟悉了下。</p>

<p>就这么多吧……</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[come back]]></title>
    <link href="http://delta4d.github.com/blog/2011/05/16/come-back/"/>
    <updated>2011-05-16T15:22:00+08:00</updated>
    <id>http://delta4d.github.com/blog/2011/05/16/come-back</id>
    <content type="html"><![CDATA[<p>很久没写博了，本来是打算做完每场比赛后都写解题报告的，结果每场比赛都被虐，导致完全没有积极性了，我太弱了，T_T。</p>

<p>稍微总结一下最近的生活吧：</p>

<ol>
  <li>
    <p>How I Met Your Mother 跟到最新了，话说我貌似还是比较适合看喜剧</p>
  </li>
  <li>
    <p>装了Ubuntu 11.04后各种死机，放个视频要重启3次，不知道是电脑出问题了，还是系统的问题。最后还是决定重装系统，为了新鲜，没有换回Ubuntu 10.10，换了一个很年轻的系统Linux Mint 10，其实就是Ubuntu的一个改装版，感觉还是不错的，尤其是terminal，每次打开都会有不同的问候语</p>
  </li>
  <li>
    <p>手机坏了，里面的喇叭坏了，现在只有短信功能，我觉的一是没有人给我打电话，二是我也懒的找地方去修，所以手机一直处于昏睡状态。我妈push了我好几次，让我买个新的，而我（懒啊懒）……后来跟妈妈都是Q聊的，怎么说呢，看着母亲不停的催促和问候感觉挺幸福的。得赶紧修手机了</p>
  </li>
  <li>
    <p>前天晚上Codeforces的比赛历史性的拿到了前10名，很兴奋啊，虽然是div2，本以为rating会大涨的，结果只是微调了一下，一开始有点失望，但是后来想了想，又感觉挺高兴的。不管怎样以后还是要多搞，多多少少总是会有收获的吧。</p>
  </li>
</ol>
]]></content>
  </entry>
  
</feed>
